# encoding: utf-8
#*********************************************************************************************************************** roman_to_integer.py
"""roman_to_integer.py
"""

#***********************************************************************************************************************

#======================================================================================================================= Imports

#======================================================================================================================= Static

#======================================================================================================================= Classes
class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        ronman_to_num = {'I': 1,
                         'V': 5,
                         'X': 10,
                         'L': 50,
                         'C': 100,
                         'D': 500,
                         'M': 1000}
        result = 0

        if s and len(s) > 0:
            result = last_digit = ronman_to_num[s[-1]]
            for i in xrange(1, len(s)):
                this_digit = ronman_to_num[s[-1 * (i + 1)]]
                if this_digit < last_digit:
                    result -= this_digit
                else:
                    result += this_digit

                last_digit = this_digit

        return result

#======================================================================================================================= Functions

#***********************************************************************************************************************

if __name__ == '__main__':
    solution = Solution()
    print solution.romanToInt('MCMXCVI')

    #***********************************************************************************************************************