# encoding: utf-8
#*********************************************************************************************************************** permutationII.py
"""permutationII.py
"""

#***********************************************************************************************************************

#======================================================================================================================= Imports

#======================================================================================================================= Static
class Solution(object):
    def permuteUnique(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """

        #[0,0,1,9] => [9, 0, 1, 0] will cause the problem
        def _permuteUnique(nums, i):
            if i == len(nums) - 1:
                result.append(list(nums))
                return

            for k in range(i, len(nums)):
                if k != i and nums[k] == nums[i]:
                    continue

                nums[i], nums[k] = nums[k], nums[i] # swap and append/pop only needs one
                _permuteUnique(nums, i + 1)
                nums[i], nums[k] = nums[k], nums[i]

        result = []

        if nums:
            nums = sorted(nums)
            _permuteUnique(nums, 0)
        return result
#======================================================================================================================= Classes

#======================================================================================================================= Functions

#***********************************************************************************************************************

if __name__ == '__main__':
    solution = Solution()

    print solution.permuteUnique([0,0,1,9])

    #***********************************************************************************************************************