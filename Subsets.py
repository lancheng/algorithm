# encoding: utf-8
#*********************************************************************************************************************** Subsets.py
"""Subsets.py
"""

#***********************************************************************************************************************

#======================================================================================================================= Imports

#======================================================================================================================= Static
class Solution(object):
    def subsets(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        result = []
        def _subsets(nums, start, subset, length):
            if len(subset) + len(nums) - start < length:
                return

            if len(subset) == length:
                result.append(list(subset))
                return

            for i in range(start, len(nums)):
                if i > start and nums[i] == nums[i - 1]:
                    continue

                subset.append(nums[i])
                _subsets(nums, i + 1, subset, length)
                subset.pop()

        nums = sorted(nums)
        for j in range(len(nums) + 1):
            subset = []
            _subsets(nums, 0, subset, j)

        return result

#======================================================================================================================= Classes

#======================================================================================================================= Functions

#***********************************************************************************************************************

if __name__ == '__main__':
    solution = Solution()
    print solution.subsets([1,3,2])

    #***********************************************************************************************************************